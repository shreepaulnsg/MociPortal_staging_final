//>>built
define("dojox/gfx3d/scheduler",["dojo/_base/lang","dojo/_base/array","dojo/_base/declare","./_base","./vector"],function(k,g,n,e,f){e.scheduler={zOrder:function(a,b){b=b?b:e.scheduler.order;a.sort(function(d,c){return b(c)-b(d)});return a},bsp:function(a,b){b=b?b:e.scheduler.outline;var d=new e.scheduler.BinarySearchTree(a[0],b);g.forEach(a.slice(1),function(c){d.add(c,b)});return d.iterate(b)},order:function(a){return a.getZOrder()},outline:function(a){return a.getOutline()}};k=n("dojox.gfx3d.scheduler.BinarySearchTree",
null,{constructor:function(a,b){this.minus=this.plus=null;this.object=a;a=b(a);this.orient=a[0];this.normal=f.normalize(a)},add:function(a,b){var d=b(a),c=this.normal,l=this.orient,m=e.scheduler.BinarySearchTree;if(g.every(d,function(h){return 0>=Math.floor(.5+f.dotProduct(c,f.substract(h,l)))}))this.minus?this.minus.add(a,b):this.minus=new m(a,b);else if(g.every(d,function(h){return 0<=Math.floor(.5+f.dotProduct(c,f.substract(h,l)))}))this.plus?this.plus.add(a,b):this.plus=new m(a,b);else throw"The case: polygon cross siblings' plate is not implemented yet";
},iterate:function(a){a=[];var b=null;b=0>=Math.floor(.5+f.dotProduct(this.normal,f.substract({x:0,y:0,z:-1E4},this.orient)))?[this.plus,this.minus]:[this.minus,this.plus];b[0]&&(a=a.concat(b[0].iterate()));a.push(this.object);b[1]&&(a=a.concat(b[1].iterate()));return a}});e.drawer={conservative:function(a,b,d){g.forEach(this.objects,function(c){c.destroy()});g.forEach(b,function(c){c.draw(d.lighting)})},chart:function(a,b,d){g.forEach(this.todos,function(c){c.draw(d.lighting)})}};return{scheduler:e.scheduler,
drawer:e.drawer,BinarySearchTree:k}});