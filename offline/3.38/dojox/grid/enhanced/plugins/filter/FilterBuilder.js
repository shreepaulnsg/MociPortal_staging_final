//>>built
define("dojox/grid/enhanced/plugins/filter/FilterBuilder",["dojo/_base/declare","dojo/_base/array","dojo/_base/lang","./_FilterExpr"],function(h,k,f,b){var d=function(a){return f.partial(function(c,e){return new b[c](e)},a)},g=function(a){return f.partial(function(c,e){return new b.LogicNOT(new b[c](e))},a)};return h("dojox.grid.enhanced.plugins.filter.FilterBuilder",null,{buildExpression:function(a){if("op"in a)return this.supportedOps[a.op.toLowerCase()](k.map(a.data,this.buildExpression,this));
var c=f.mixin(this.defaultArgs[a.datatype],a.args||{});return new this.supportedTypes[a.datatype](a.data,a.isColumn,c)},supportedOps:{equalto:d("EqualTo"),lessthan:d("LessThan"),lessthanorequalto:d("LessThanOrEqualTo"),largerthan:d("LargerThan"),largerthanorequalto:d("LargerThanOrEqualTo"),contains:d("Contains"),startswith:d("StartsWith"),endswith:d("EndsWith"),notequalto:g("EqualTo"),notcontains:g("Contains"),notstartswith:g("StartsWith"),notendswith:g("EndsWith"),isempty:d("IsEmpty"),range:function(a){return new b.LogicALL(new b.LargerThanOrEqualTo(a.slice(0,
2)),new b.LessThanOrEqualTo(a[0],a[2]))},logicany:d("LogicANY"),logicall:d("LogicALL")},supportedTypes:{number:b.NumberExpr,string:b.StringExpr,"boolean":b.BooleanExpr,date:b.DateExpr,time:b.TimeExpr},defaultArgs:{"boolean":{falseValue:"false",convert:function(a,c){var e=c.falseValue;c=c.trueValue;if(f.isString(a)){if(c&&a.toLowerCase()==c)return!0;if(e&&a.toLowerCase()==e)return!1}return!!a}}}})});