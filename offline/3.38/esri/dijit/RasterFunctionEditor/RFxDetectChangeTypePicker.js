// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/3.38/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/dijit/RasterFunctionEditor/templates/RFxDetectChangeTypePicker.html":'\x3cdiv\x3e\r\n  \x3ctable class\x3d"esri-rfx-args-editor__table"\x3e\r\n    \x3ctr class\x3d"esri-rfx-args-editor__tr--arg-name esri-rfx-detect-change-type-picker"\x3e\r\n      \x3ctd data-dojo-attach-point\x3d"fieldLabel"\x3e\x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr class\x3d"esri-rfx-args-editor__tr--arg-widget esri-rfx-detect-change-type-picker"\x3e\r\n      \x3ctd\x3e\r\n        \x3cselect dojoType\x3d"dijit.form.Select" data-dojo-attach-point\x3d"_templateChangeTypeNode"\x3e\x3c/select\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n  \x3c/table\x3e\r\n\x3c/div\x3e\r\n'}});
define("esri/dijit/RasterFunctionEditor/RFxDetectChangeTypePicker","dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/has dojox/lang/functional/object dojo/dom-style dojo/store/Memory dojo/data/ObjectStore dojo/i18n!../../nls/jsapi dojo/text!./templates/RFxDetectChangeTypePicker.html dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin ../../kernel".split(" "),function(l,h,e,p,q,n,r,t,u,v,w,x,y,z){l=l("RFxDetectChangeTypePicker",[w,x,y],{widgetsInTemplate:!0,templateString:v,
declaredClass:"dijit.RasterFunctionEditor.RFxDetectChangeTypePicker",initialChangeTypeStore:[],alteredChangeTypeStore:[],triggerArgsUIState:{},isChangeAnalysisTypeCCDC:!1,changeTypeSelect:null,constructor:function(){this.inherited(arguments);this._i18n=u.rasterFunctionEditor},postCreate:function(){this.inherited(arguments);this.changeTypeSelect=this._templateChangeTypeNode;this._setLabels();this._attachRasterChangeListener();this._attachChangeTypeChangeListener()},onEditorStateTriggerExecuted:function(){this._saveTriggerArgsState();
this._setInitialchangeTypeState()},_getPersistedValue:function(){var a;Object.keys(this.inputArgs).forEach(function(b){a=this.inputArgs[b].value}.bind(this));return a},_setInputArgValue:function(a){Object.keys(this.inputArgs).forEach(function(b){this.inputArgs[b].value=a}.bind(this));this.emit("change",{value:a})},_getFunctionName:function(a){return a.ToolName?a.ToolName.value.replace("_sa",""):a.type.replace("Arguments","")},_modifyRfxArgDisplay:function(a,b){a=a.uxBlocks;switch(b){case "hide":var c=
"none";break;case "show":c=a&&a[0]&&"TR"===a[0].tagName?"table-row":"block";break;default:c=b}a&&a.forEach(function(f){f&&c&&n.set(f,"display",c)},this)},_isDatatypeRaster:function(a){return a.input&&0<=a.input.declaredClass.indexOf("RFxRasterInput")},_isChangeAnalysisTypeCCDC:function(a){return a.getKeyProperties().then(h.hitch(this,function(b){b=b.ChangeAnalysisParameters;return"CCDC"===(b&&b.AnalysisType)}))},_createObjectStore:function(a,b){return new t(new r({data:a,idProperty:b}))},_setLabels:function(){this.inputArgs&&
e.forEach(Object.keys(this.inputArgs),function(a){a=this.inputArgs[a];this.fieldLabel.innerHTML=a.displayName;a.input=this.changeTypeSelect;a.input.declaredClass=this.declaredClass;a.input.onEditorStateTriggerExecuted=this.onEditorStateTriggerExecuted.bind(this)}.bind(this))},_setInitialchangeTypeState:function(){var a=this._getFunctionName(this.rfxArgs),b=(a=this.rasterFunctions[a])&&a.rasterFunctionArguments;e.forEach(q.keys(this.inputArgs),function(d){(d=b[d].domain)&&"list"===d.type&&(this.initialChangeTypeStore=
h.clone(this.rasterFunctionEnums[d.enum]))},this);e.forEach(this.initialChangeTypeStore,function(d){d.key=d.key.toString()});this.initialChangeTypeStore||console.error("Domain list Enum not set! Check Schema");var c=["0","1","2","3"];this.alteredChangeTypeStore=e.filter(this.initialChangeTypeStore,function(d){return e.some(c,function(m){return d.key===m})});var f=!0;e.forEach(Object.keys(this.triggerArgs),function(d){if(this._isDatatypeRaster(this.triggerArgs[d])){f=!1;var m=this.triggerArgs[d].input.value;
if(m){var g=this.triggerArgs[d].input.getSelectedLayer(m.name);g&&g.loaded?this._isChangeAnalysisTypeCCDC(g).then(h.hitch(this,function(k){(this.isChangeAnalysisTypeCCDC=k)?(this._setChangetypeStore(this.alteredChangeTypeStore),this._saveTriggerArgsState(),this._hideTriggerArgs()):(this._setChangetypeStore(this.initialChangeTypeStore),this._showTriggerArgs())})):g&&g.on("load",function(k){g=k.layer?k.layer:k;this._isChangeAnalysisTypeCCDC(g).then(h.hitch(this,function(A){(this.isChangeAnalysisTypeCCDC=
A)?(this._setChangetypeStore(this.alteredChangeTypeStore),this._saveTriggerArgsState(),this._hideTriggerArgs()):(this._setChangetypeStore(this.initialChangeTypeStore),this._showTriggerArgs())}))}.bind(this))}else this._setChangetypeStore(this.initialChangeTypeStore),this._showTriggerArgs()}},this);f&&(this._setChangetypeStore(this.initialChangeTypeStore),this._showTriggerArgs())},_attachChangeTypeChangeListener:function(){this.changeTypeSelect.on("change",this._handleChangeTypeChange.bind(this))},
_handleStateTriggers:function(a){var b=this.triggerArgs.MaxNumberChanges,c=this.triggerArgs.SegmentDate;"3"===a?(this._modifyRfxArgDisplay(b,"hide"),this.isChangeAnalysisTypeCCDC?null:this._modifyRfxArgDisplay(c,"hide")):(this._modifyRfxArgDisplay(b,"show"),this.isChangeAnalysisTypeCCDC?null:this._modifyRfxArgDisplay(c,"show"))},_handleChangeTypeChange:function(a){this._setInputArgValue(a);this._handleStateTriggers(a)},_attachRasterChangeListener:function(){e.forEach(Object.keys(this.triggerArgs),
function(a){if(this._isDatatypeRaster(this.triggerArgs[a]))this.triggerArgs[a].input.on("change",this._handleRasterChange.bind(this))},this)},_handleRasterChange:function(a){a=a.detail.widget.getSelectedLayer(a.name);this._isChangeAnalysisTypeCCDC(a).then(h.hitch(this,function(b){(this.isChangeAnalysisTypeCCDC=b)?(this._setChangetypeStore(this.alteredChangeTypeStore),this._saveTriggerArgsState(),this._hideTriggerArgs()):(this._setChangetypeStore(this.initialChangeTypeStore),this._showTriggerArgs())}))},
_hideTriggerArgs:function(){e.forEach(Object.keys(this.triggerArgs),function(a){var b=this.triggerArgs[a];this._isDatatypeRaster(b)||"MaxNumberChanges"===a||this._modifyRfxArgDisplay(b,"hide")},this)},_saveTriggerArgsState:function(){e.forEach(Object.keys(this.triggerArgs),function(a){a=this.triggerArgs[a];var b=a.uxBlocks&&a.uxBlocks[0];!this._isDatatypeRaster(a)&&b&&(this.triggerArgsUIState[a.name]=""===n.get(b,"display")?this.triggerArgsUIState[a.name]:n.get(b,"display"))},this)},_showTriggerArgs:function(){e.forEach(Object.keys(this.triggerArgs),
function(a){var b=this.triggerArgs[a];this._isDatatypeRaster(b)||"MaxNumberChanges"===a||this._modifyRfxArgDisplay(b,this.triggerArgsUIState[b.name])},this)},_setChangetypeStore:function(a){var b=this._createObjectStore(a,"key");this.changeTypeSelect.set("store",b);b=a[0]&&a[0].key;var c=this._getPersistedValue().toString();c&&e.some(a,function(f){return f.key===c})&&(b=c);this.changeTypeSelect.set("value",b);this._setInputArgValue(b)}});p("extend-esri")&&h.setObject("dijit.RasterFunctionEditor.RFxDetectChangeTypePicker",
l,z);return l});