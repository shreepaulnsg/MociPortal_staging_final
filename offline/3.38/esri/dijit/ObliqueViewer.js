// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/3.38/esri/copyright.txt for details.
//>>built
define("esri/dijit/ObliqueViewer","dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../tasks/QueryTask ../tasks/query ./_EventedWidget dijit/_Widget ./_ObliqueRotationWidget dojo/_base/array ../ImageSpatialReference ../tasks/ImageServiceProjectTask ../tasks/ProjectParameters ../layers/MosaicRule ../geometry/Extent ../geometry/Polygon ../lang ../config ./RasterList dojo/store/Observable dojo/store/Memory dojo/date/locale dojo/json dojo/number esri/geometry/geometryEngine dojo/Deferred".split(" "),
function(v,m,C,D,E,z,F,G,H,g,I,J,K,n,w,r,u,f,L,A,B,M,N,O,x,y){v=v([F,G],{declaredClass:"esri.dijit.ObliqueViewer",azimuthField:"SensorAzimuth",elevationThreshold:70,elevationField:"SensorElevation",snap:!0,_refreshOK:!0,isNadir:!1,showThumbnail:!0,noQueryOnExtentChange:!1,azimuthTolerance:10,rasterListRefresh:!0,extents:[],center:null,searchRadius:0,searchUnit:"meters",maxExtentIdx:5,currentExtentIdx:null,esriDataType:{decimal:{esriFieldTypeDouble:1,esriFieldTypeSingle:1},integer:{esriFieldTypeInteger:1,
esriFieldTypeSmallInteger:1},date:{esriFieldTypeDate:1},string:{esriFieldTypeString:1},notRequired:{esriFieldTypeGeometry:1,esriFieldTypeBlob:1}},_dateFormats:{shortDate:{datePattern:"M/d/y",selector:"date"},shortDateLE:{datePattern:"d/M/y",selector:"date"},longMonthDayYear:{datePattern:"MMMM d, y",selector:"date"},dayShortMonthYear:{datePattern:"d MMM y",selector:"date"},longDate:{datePattern:"EEEE, MMMM d, y",selector:"date"},shortDateShortTime:{datePattern:"M/d/y",timePattern:"h:mm a",selector:"date and time"},
shortDateLEShortTime:{datePattern:"d/M/y",timePattern:"h:mm a",selector:"date and time"},shortDateShortTime24:{datePattern:"M/d/y",timePattern:"H:mm",selector:"date and time"},shortDateLEShortTime24:{datePattern:"d/M/y",timePattern:"H:mm",selector:"date and time"},shortDateLongTime:{datePattern:"M/d/y",timePattern:"h:mm:ss a",selector:"date and time"},shortDateLELongTime:{datePattern:"d/M/y",timePattern:"h:mm:ss a",selector:"date and time"},shortDateLongTime24:{datePattern:"M/d/y",timePattern:"H:mm:ss",
selector:"date and time"},shortDateLELongTime24:{datePattern:"d/M/y",timePattern:"H:mm:ss",selector:"date and time"},longMonthYear:{datePattern:"MMMM y",selector:"date"},shortMonthYear:{datePattern:"MMM y",selector:"date"},year:{datePattern:"y",selector:"date"}},setNextExtent:function(){if(!(this.currentExtentIdx>=this.maxExtentIdx||this.currentExtentIdx>=this.extents.length-1)){var a=this;this.currentExtentIdx++;var c=new n;c.method=n.METHOD_LOCKRASTER;c.lockRasterIds=[this.extents[this.currentExtentIdx].spatialReference.icsid];
a.imageServiceLayer.setMosaicRule(c,!0);a._refreshOK=!1;a.map.spatialReference=this.extents[this.currentExtentIdx].spatialReference;var b=f.defaults.map.zoomDuration;f.defaults.map.zoomDuration=0;a.map.setExtent(this.extents[this.currentExtentIdx]).then(function(){a._refreshOK=!0;f.defaults.map.zoomDuration=b})}},setPreviousExtent:function(){if(!(0>=this.currentExtentIdx)){var a=this;this.currentExtentIdx--;var c=new n;c.method=n.METHOD_LOCKRASTER;c.lockRasterIds=[this.extents[this.currentExtentIdx].spatialReference.icsid];
a.imageServiceLayer.setMosaicRule(c,!0);a._refreshOK=!1;a.map.spatialReference=this.extents[this.currentExtentIdx].spatialReference;var b=f.defaults.map.zoomDuration;f.defaults.map.zoomDuration=0;a.map.setExtent(this.extents[this.currentExtentIdx]).then(function(){a._refreshOK=!0;f.defaults.map.zoomDuration=b})}},isPreviousAvailable:function(){},isNextAvailable:function(){},_isICS:function(a){return!(!a.ics&&!a.icsid)},resizeRotationGauge:function(a){this._rotationWidget&&this._rotationWidget.resize(a)},
_initializeTasks:function(){this.obliqueRecordsQueryTask=new E(this.imageServiceUrl);this.projectTask=new J},_verifyRasterInfoFields:function(){return this.rasterInfoFields&&this.rasterInfoFields.length},_setupRasterList:function(){var a=this,c=[{name:this.imageServiceLayer.objectIdField,alias:"Object ID",display:!0},{name:this.azimuthField,alias:"Azimuth",display:!0},{name:this.elevationField,alias:this.elevationField,display:!0}];this.rasterInfoFields=this._verifyRasterInfoFields()?this.rasterInfoFields:
c;this.rasterList=new L({data:new A(new B),showThumbnail:this.showThumbnail,imageServiceUrl:this.imageServiceLayer.url,fields:this.rasterInfoFields},this.rasterListDiv);this.rasterList.on("raster-select",function(b){a.selectedRasterId=b[a.imageServiceLayer.objectIdField];a.emit("raster-select",{selectedRasterId:a.selectedRasterId});a.setImage(a.selectedRasterId,a.map.extent);g.forEach(a.filteredRecords,function(d){delete d.attributes.selected;d.attributes[a.imageServiceLayer.objectIdField]===a.selectedRasterId&&
(d.attributes.selected=!0)});a._rotationWidget&&a._rotationWidget.setAzimuth(b[a.azimuthField])});this.rasterList.startup()},_setupRotationWidget:function(){var a=this;this._rotationWidget=new H({snap:this.snap,azimuthAngle:this.azimuthAngle},this.rotationDiv);this._rotationWidget.startup();this.own(this._rotationWidget.on("azimuth-change",function(c){var b=c.azimuth;a.currentExtentIdx=0;a.extents=[];a.emit("azimuth-change",c);b?(a.azimuthAngle=b,a._checkExtentOrientation(),a._filterByAzimuth(),a._refreshRotationWidget({features:a.records}),
a._refreshListDijit(a.filteredRecords),a._refreshImage(a.map.extent),a._oldAzimuth=b,a.isNadir=!1):a._switchToNadir()}))},_refreshRotationWidget:function(a){this._rotationWidget&&this._rotationWidget.refresh(a)},_checkExtentOrientation:function(){var a=Math.abs((this._oldAzimuth-this.azimuthAngle)/90%2);this._azimuthExtentChanged=.25>a||1.75<a?!1:!0},_refreshListDijit:function(a){a=this._prepareListData(a);this.rasterList&&this.rasterListRefresh&&this.rasterList.setData(a);this.emit("records-refresh",
{records:this.records,filteredRecords:this.filteredRecords})},_prepareListData:function(a){var c=[],b,d=this.imageServiceLayer.objectIdField,e=this.imageServiceLayer.credential;g.forEach(a,function(h){b=this._fomatAttributes(m.clone(h.attributes));b.thumbnailUrl=this.imageServiceUrl+"/"+b[d]+"/thumbnail";e&&e.token&&(b.thumbnailUrl+="?token\x3d"+e.token);c.push(b)},this);return new A(new B({data:c,idProperty:this.imageServiceLayer.objectIdField}))},_fomatAttributes:function(a){this.rasterInfoFields.forEach(function(c){a[c.name]=
this._getFormattedValue(c,a[c.name])},this);return a},_getFormattedValue:function(a,c){if(a.format&&u.isDefined(c)){var b=N.parse(a.format);a=a.type;if(a in this.esriDataType.date)return M.format(new Date(c),this._dateFormats[b.dateFormat]);if(a in this.esriDataType.integer||a in this.esriDataType.decimal)return c=O.format(c,{places:b.places}),b.digitSeparator||this._i18n.group&&(c=c.replace(new RegExp("\\"+this._i18n.group,"g"),"")),c}else return c},clearSelection:function(){this.rasterList&&this.rasterList.clearSelection();
g.forEach(this.records,function(a){delete a.attributes.selected});this._refreshListDijit(this.records)},_switchToNadir:function(){var a=!!this.map.extent.spatialReference.icsid,c=this.defaultNadirMosaicRule||this.imageServiceLayer.mosaicRule||new n;this._oldAzimuth=this.azimuthAngle=null;this._azimuthExtentChanged=!1;c.method=c.method||n.METHOD_NONE;c.where=this.elevationField+"\x3e"+this.elevationThreshold;this.defaultNadirMosaicRule=c;this.imageServiceLayer.setMosaicRule(c,a);this.clearSelection();
if(a){var b=this,d;this.projectGeometry(this.map.extent,this.nadirSpatialReference).then(function(e){b._verifyExtent(e[0])&&(b._refreshOK=!1,b.map.spatialReference=e[0].spatialReference,b.spatialReferenceChanged(),d=f.defaults.map.zoomDuration,f.defaults.map.zoomDuration=0,b.map.setExtent((new w(e[0])).setSpatialReference(e[0].spatialReference)).then(function(){b._refreshOK=!0;b.isNadir=!0;f.defaults.map.zoomDuration=d;b.selectedRasterId=null;b.selectedRaster=null;b.filteredRecords=null}))})}},projectGeometry:function(a,
c){var b=new K;c=c||this.map.spatialReference;b.geometries=[a];b.outSR=c;return this.projectTask.execute(b)},_verifyExtent:function(a){return!isNaN(a.xmin)&&!isNaN(a.xmax)&&!isNaN(a.ymin)&&!isNaN(a.ymax)},_verifyPoint:function(a){return!isNaN(a.x)&&!isNaN(a.y)},_refreshRecords:function(a){function c(d){b._verifyExtent(d[0].getExtent())?(b.nadirExtent=d[0].getExtent(),b.search(b._trimExtent(b.nadirExtent,.15)).then(function(e){if(!e||!e.features)return b.emit("no-records",{message:"records not provided.",
extent:b.nadirExtent}),b._refreshRotationWidget({features:[]}),b._refreshListDijit(b.filteredRecords),console.log("Oblique viewer: no records returned");b.records=e.features;b._refreshRotationWidget({features:b.records});b.isNadir?b._refreshListDijit(b.records):(b._filterByAzimuth(),b._refreshListDijit(b.filteredRecords),a&&b.filteredRecords&&b.filteredRecords.length&&b._refreshImage(b.map.extent));b.emit("extent-change",{geometry:b.filteredRecords?b._getIntersectGeometry(d[0]):d[0]})})):(console.error("Oblique viewer: Project Operation returned invalid extent"),
b.search(b._trimExtent(b.map.extent,.15)).then(function(e){if(!e||!e.features)return b.emit("no-records",{message:"records not provided.",extent:b.map.extent}),b._refreshRotationWidget({features:[]}),b._refreshListDijit(b.filteredRecords),console.log("Oblique viewer: no records returned");b.records=e.features;b._refreshRotationWidget({features:b.records});b.isNadir?b._refreshListDijit(b.records):(b._filterByAzimuth(),b._refreshListDijit(b.filteredRecords),a&&b.filteredRecords&&b.filteredRecords.length&&
b._refreshImage((new r(b.filteredRecords[0].geometry)).getExtent()))}))}var b=this;this.nadirSpatialReference.equals(this.map.extent.spatialReference)?c([this.map.extent]):this.projectGeometry(this._convertExtentToPolygon(this.map.extent),this.nadirSpatialReference).then(c)},_convertExtentToPolygon:function(a){var c=new r(a.spatialReference);c.addRing([[a.xmax,a.ymin],[a.xmax,a.ymax],[a.xmin,a.ymax],[a.xmin,a.ymin],[a.xmax,a.ymin]]);return c},postCreate:function(){this.inherited(arguments);this.map&&
this.imageServiceLayer||console.error("ObliqueViewer: Map or Image service layer not provided.");this.imageServiceUrl=this.imageServiceLayer.url;this.nadirSpatialReference=this.map.extent.spatialReference;this._initializeTasks();(this.isNadir=!u.isDefined(this.azimuthAngle))&&this._switchToNadir();this.rotationDiv&&this._setupRotationWidget();if(this.rasterListDiv)if(this.imageServiceLayer.loaded)this._setupRasterList();else this.imageServiceLayer.on("load",m.hitch(this,this._setupRasterList));this.sorter||
(this.sorter=this._sortSpatially);this.own(this.map.on("extent-change",m.hitch(this,function(a){this._refreshOK&&!this.noQueryOnExtentChange&&(this._isICS(this.map.extent.spatialReference)||(this.nadirExtent=this.map.extent,this._switchToNadir(),this.emit("extent-change",{geometry:this.filteredRecords?this._getIntersectGeometry(this._convertExtentToPolygon(this.nadirExtent)):this._convertExtentToPolygon(this.nadirExtent)})),this._refreshRecords(!0),this._azimuthExtentChanged=!1)})));u.isDefined(this.azimuthAngle)&&
!this.noQueryOnExtentChange&&this._refreshRecords()},_refreshImage:function(a){this.filteredRecords&&this.filteredRecords.length&&this.selectedRasterId!==this.filteredRecords[0].attributes[this.imageServiceLayer.objectIdField]?this._setSelectedRaster(a):this._refreshSavedExtents()},_refreshSavedExtents:function(){this._isICS(this.map.extent.spatialReference)&&(this.extents&&this.extents.length?(this.extents.length>this.maxExtentIdx&&(this.extents.shift(),this.currentExtentIdx--),this.currentExtentIdx<
this.extents.length-1?this.currentExtentIdx=this.extents.length-1:this.currentExtentIdx++):(this.currentExtentIdx=0,this.extents=[]),this.extents.push(this.map.extent))},_createExtent:function(a,c,b){var d=b.getWidth()/2*1.00001;b=b.getHeight()/2;return new w(a.x-d,a.y-b,a.x+d,a.y+b,c)},spatialReferenceChanged:function(){this.imageServiceLayer.handleSpatialReferenceChange()},setImage:function(a,c){function b(p){if(t)if(d._verifyPoint(p[0]))k=d._createExtent(p[0],d.imageSpatialReference,t);else return console.log("Project operation returned invalid result.");
else if(t||d._verifyExtent(p[0]))k=p[0];else return console.log("Project operation returned invalid extent.");e=new n;e.method=n.METHOD_LOCKRASTER;e.lockRasterIds=[a];d.imageServiceLayer.setMosaicRule(e,!0);d._refreshOK=!1;d.map.spatialReference=k.spatialReference;d.spatialReferenceChanged();h=f.defaults.map.zoomDuration;l=f.defaults.map.panDuration=0;f.defaults.map.zoomDuration=0;f.defaults.map.panDuration=0;d.map.setExtent((new w(k)).setSpatialReference(k.spatialReference)).then(function(){d._refreshOK=
!0;f.defaults.map.zoomDuration=h;f.defaults.map.panDuration=l;d._refreshSavedExtents();d.projectGeometry(d._convertExtentToPolygon(k),d.nadirSpatialReference).then(function(q){d.emit("extent-change",{geometry:d.filteredRecords?d._getIntersectGeometry(q[0]):q[0]})})});d.center&&d.projectGeometry(d.center,d.imageSpatialReference).then(function(q){d.emit("add-point",{point:q[0]})})}if(!a)return console.error("Object ID of raster to be displayed not provided");var d=this,e,h,l,t=c&&(c.spatialReference.icsid||
c.spatialReference.ics)?c:null,k;this.imageSpatialReference=new I({icsid:a,url:this.imageServiceUrl});c&&c.spatialReference&&!c.spatialReference.ics&&!c.spatialReference.icsid?(d.nadirExtent=c.getExtent(),d.projectGeometry(d.nadirExtent,d.imageSpatialReference).then(b)):this.projectGeometry(this._convertExtentToPolygon(c),this.nadirSpatialReference).then(function(p){d.nadirExtent=p[0].getExtent().setSpatialReference(d.nadirSpatialReference);d.projectGeometry(c.getCenter(),d.imageSpatialReference).then(b)})},
locate:function(a){if(!a)return console.error("Geometry not specified.");var c=this,b;if((b=a.type)&&"extent"===b)var d=a;else b=b&&"point"===b?x.buffer(a,100,"meters"):x.buffer(a.getExtent().getCenter(),100,"meters"),d=b.getExtent();this.center=d.getCenter();this.search(a).then(function(e){c.setData(e.features,d)})},search:function(a){if(!a)return console.error("Oblique viewer: no geometry provided for search.");var c=new y,b=this;var d=new z;d.geometry=a;d.outFields=this._getQueryFields()||[this.imageServiceLayer.objectIdField,
this.azimuthField];d.returnGeometry=!0;d.where=this.elevationField+"\x3c"+this.elevationThreshold;d.outSpatialReference=a.spatialReference;this.obliqueRecordsQueryTask.execute(d).then(function(e){c.resolve({features:b.sorter(b._processRecords(e.features),a)})});return c.promise},_sortSpatially:function(a,c){if(a&&a.length&&this.map.loaded){var b=0,d=0,e=a[0];b=0;d=this.nadirExtent||this.map.extent;c&&"extent"===c.type&&c.spatialReference.equals(a[0].geometry.spatialReference)&&(d=c);c=d.getCenter();
this.selectedRaster&&this._extentContained(this.selectedRaster,d)&&(g.some(a,function(p,q){if(p.attributes[this.imageServiceLayer.objectIdField]===this.selectedRasterId)return k=a[q],a[q]=e,a[0]=k,!0},this),b=1);for(;b<a.length;b++){var h=Math.sqrt((a[b].center.x-c.x)*(a[b].center.x-c.x)+(a[b].center.y-c.y)*(a[b].center.y-c.y));var l=b;for(d=b+1;d<a.length;d++){var t=Math.sqrt((a[d].center.x-c.x)*(a[d].center.x-c.x)+(a[d].center.y-c.y)*(a[d].center.y-c.y));h>t&&(e=a[d],h=t,l=d)}if(b!==l){var k=a[b];
a[b]=e;a[l]=k}}}return a},_filterByAzimuth:function(){this.filteredRecords=[];g.forEach(this.records,function(a){Math.min(Math.abs(a.attributes[this.azimuthField]-this.azimuthAngle),Math.abs(a.attributes[this.azimuthField]-this.azimuthAngle-360))<=this.azimuthTolerance&&this.filteredRecords.push(a)},this);this.filteredRecords&&this.filteredRecords.length&&!this.isNadir&&(this.filteredRecords[0].attributes.selected=!0)},_processRecords:function(a){var c;g.forEach(a,function(b){c=(new r(b.geometry)).setSpatialReference(this.nadirSpatialReference).getCentroid();
b.center=c},this);0===a.length?a=this.selectedRasterId=this.filteredRecords=null:this.emit("records-found",{message:"records are found."});return a},_computeAzimuthFilter:function(){var a=(this.azimuthAngle+350)%360,c=(this.azimuthAngle+10)%360;return a<c?this.azimuthField+" BETWEEN "+a+" AND "+c:"("+this.azimuthField+" BETWEEN 0 AND "+c+" OR "+this.azimuthField+" BETWEEN "+a+" AND 360)"},_getIds:function(a){var c=[],b=this;g.forEach(a,function(d){c.push(d.attributes[b.imageServiceLayer.objectIdField])});
return c},_setRasterListRefreshAttr:function(a){this._set("rasterListRefresh",a);a&&this._refreshListDijit(this.isNadir?this.records:this.filteredRecords)},_extentContained:function(a,c){if(!a||!c)return!1;a=(new r(a.geometry)).getExtent();return this._trimExtent(a,.2).contains(c)},setData:function(a,c){if(!a)return this.emit("no-records",{message:"records not provided.",extent:c}),this._refreshRotationWidget({features:[]}),this._refreshListDijit(this.filteredRecords),console.error("Oblique viewer: records not provided.");
c=c||this.map.extent;this._set("records",a);this._refreshRotationWidget({features:a});this._filterByAzimuth();if(this.filteredRecords&&this.filteredRecords.length)if(this._refreshListDijit(this.filteredRecords),this.imageServiceLayer.loaded)this._setSelectedRaster(c);else this.imageServiceLayer.on("load",m.hitch(this,function(){this._setSelectedRaster(c)}));else this.selectedRasterId=this.selectedRaster=null,this.emit("raster-select",{selectedRasterId:null})},_setSelectedRaster:function(a){this.selectedRaster=
this.filteredRecords[0];this.selectedRasterId=this.selectedRaster.attributes[this.imageServiceLayer.objectIdField];this.setImage(this.selectedRaster.attributes[this.imageServiceLayer.objectIdField],a);this.emit("raster-select",{selectedRasterId:this.selectedRasterId})},setExtent:function(a){var c=new y,b=this;this.projectGeometry(a,this.map.spatialReference).then(function(d){b._verifyExtent(d[0])&&b.map.setExtent(d[0]).then(function(){c.resolve()})});return c.promise},zoomToSelectedImage:function(){if(!u.isDefined(this.selectedRasterId))return console.error("Oblique viewer: no selected raster.");
if(this.isNadir)return console.log("Viewer in nadir mode, no selected raster.");this._getImageGeometry(this.selectedRasterId).then(m.hitch(this,function(a){this.map.setExtent(a.getExtent())}))},_getImageGeometry:function(a){var c=new z,b,d,e=new y;c.objectIds=[a];c.returnGeometry=!0;this.obliqueRecordsQueryTask.execute(c).then(m.hitch(this,function(h){h.features&&h.features.length&&(d=h.features[0])&&d.geometry&&(b=new r(d.geometry),this.projectGeometry(b,this.map.spatialReference).then(m.hitch(this,
function(l){l&&l.length&&(b=(new r(l[0])).setSpatialReference(this.map.spatialReference),e.resolve(b))})))}));return e.promise},_getQueryFields:function(){var a=[];g.forEach(this.rasterInfoFields,function(c){c.name&&a.push(c.name)});0>g.indexOf(a,this.azimuthField)&&a.push(this.azimuthField);0>g.indexOf(a,this.imageServiceLayer.objectIdField)&&a.push(this.imageServiceLayer.objectIdField);return a},_trimExtent:function(a,c){c=c||.15;var b=a.ymax-a.ymin;var d=b*(1-c);c=b*(1-c);b=a.getCenter();return new w({xmin:b.x-
c/2,ymin:b.y-d/2,xmax:b.x+c/2,ymax:b.y+d/2,spatialReference:a.spatialReference})},_getIntersectGeometry:function(a){var c=this,b;if(!u.isDefined(this.selectedRasterId))return a;if(g.some(this.filteredRecords,function(d){if(d.attributes[c.imageServiceLayer.objectIdField]==c.selectedRasterId)return b=d.geometry,!0}))return x.intersect(a,b)}});C("extend-esri")&&m.setObject("dijit.ObliqueViewer",v,D);return v});