// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/3.38/esri/copyright.txt for details.
//>>built
define("esri/layers/rasterFormats/LercCodec",[],function(){var I={defaultNoDataValue:-3.4027999387901484E38,decode:function(e,m){m=m||{};var c=m.inputOffset||0,g=m.encodedMaskData||null===m.encodedMaskData,a={},b=new Uint8Array(e,c,10);a.fileIdentifierString=String.fromCharCode.apply(null,b);if("CntZImage"!=a.fileIdentifierString.trim())throw"Unexpected file identifier string: "+a.fileIdentifierString;c+=10;b=new DataView(e,c,24);a.fileVersion=b.getInt32(0,!0);a.imageType=b.getInt32(4,!0);a.height=
b.getUint32(8,!0);a.width=b.getUint32(12,!0);a.maxZError=b.getFloat64(16,!0);c+=24;if(!g)if(b=new DataView(e,c,16),a.mask={},a.mask.numBlocksY=b.getUint32(0,!0),a.mask.numBlocksX=b.getUint32(4,!0),a.mask.numBytes=b.getUint32(8,!0),a.mask.maxValue=b.getFloat32(12,!0),c+=16,0<a.mask.numBytes){g=new Uint8Array(Math.ceil(a.width*a.height/8));b=new DataView(e,c,a.mask.numBytes);var q=b.getInt16(0,!0),u=2,x=0;do{if(0<q)for(;q--;)g[x++]=b.getUint8(u++);else{var B=b.getUint8(u++);for(q=-q;q--;)g[x++]=B}q=
b.getInt16(u,!0);u+=2}while(u<a.mask.numBytes);if(-32768!==q||x<g.length)throw"Unexpected end of mask RLE encoding";a.mask.bitset=g;c+=a.mask.numBytes}else 0===(a.mask.numBytes|a.mask.numBlocksY|a.mask.maxValue)&&(g=new Uint8Array(Math.ceil(a.width*a.height/8)),a.mask.bitset=g);b=new DataView(e,c,16);a.pixels={};a.pixels.numBlocksY=b.getUint32(0,!0);a.pixels.numBlocksX=b.getUint32(4,!0);a.pixels.numBytes=b.getUint32(8,!0);a.pixels.maxValue=b.getFloat32(12,!0);c+=16;g=a.pixels.numBlocksX;b=a.pixels.numBlocksY;
g+=0<a.width%g?1:0;q=b+(0<a.height%b?1:0);a.pixels.blocks=Array(g*q);for(x=u=0;x<q;x++)for(B=0;B<g;B++){var h=0;b=new DataView(e,c,Math.min(10,e.byteLength-c));var f={};a.pixels.blocks[u++]=f;var d=b.getUint8(0);h++;f.encoding=d&63;if(3<f.encoding)throw"Invalid block encoding ("+f.encoding+")";if(2===f.encoding)c++;else{if(0!==d&&2!==d){d>>=6;f.offsetType=d;if(2===d)f.offset=b.getInt8(1),h++;else if(1===d)f.offset=b.getInt16(1,!0),h+=2;else if(0===d)f.offset=b.getFloat32(1,!0),h+=4;else throw"Invalid block offset type";
if(1===f.encoding)if(d=b.getUint8(h),h++,f.bitsPerPixel=d&63,d>>=6,f.numValidPixelsType=d,2===d)f.numValidPixels=b.getUint8(h),h++;else if(1===d)f.numValidPixels=b.getUint16(h,!0),h+=2;else if(0===d)f.numValidPixels=b.getUint32(h,!0),h+=4;else throw"Invalid valid pixel count type";}c+=h;if(3!=f.encoding)if(0===f.encoding){d=(a.pixels.numBytes-1)/4;if(d!==Math.floor(d))throw"uncompressed block has invalid length";b=new ArrayBuffer(4*d);h=new Uint8Array(b);h.set(new Uint8Array(e,c,4*d));b=new Float32Array(b);
f.rawData=b;c+=4*d}else 1===f.encoding&&(d=Math.ceil(f.numValidPixels*f.bitsPerPixel/8),b=new ArrayBuffer(4*Math.ceil(d/4)),h=new Uint8Array(b),h.set(new Uint8Array(e,c,d)),f.stuffedData=new Uint32Array(b),c+=d)}}a.eofOffset=c;e=null!=m.noDataValue?m.noDataValue:I.defaultNoDataValue;g=m.encodedMaskData;d=m.returnMask;q=0;u=a.pixels.numBlocksX;x=a.pixels.numBlocksY;B=Math.floor(a.width/u);f=Math.floor(a.height/x);h=2*a.maxZError;c=Number.MAX_VALUE;g=g||(a.mask?a.mask.bitset:null);var v;b=new (m.pixelType||
Float32Array)(a.width*a.height);d&&g&&(v=new Uint8Array(a.width*a.height));d=new Float32Array(B*f);for(var k,l,D=0;D<=x;D++){var E=D!==x?f:a.height%x;if(0!==E)for(var F=0;F<=u;F++){var C=F!==u?B:a.width%u;if(0!==C){var n=D*a.width*f+F*B,G=a.width-C,r=a.pixels.blocks[q],p;if(2>r.encoding){if(0===r.encoding)var t=r.rawData;else{var w=p=t=void 0;k=r.stuffedData;l=r.bitsPerPixel;var J=r.numValidPixels,K=r.offset,L=h,O=d,M=a.pixels.maxValue,H=(1<<l)-1,N=0,y=0,P=Math.ceil((M-K)/L);k[k.length-1]<<=8*(4*
k.length-Math.ceil(l*J/8));for(w=0;w<J;w++)0===y&&(t=k[N++],y=32),y>=l?(p=t>>>y-l&H,y-=l):(y=l-y,p=(t&H)<<y&H,t=k[N++],y=32-y,p+=t>>>y),O[w]=p<P?K+p*L:M;t=d}p=0}else var z=2===r.encoding?0:r.offset;if(g)for(l=0;l<E;l++){if(n&7){var A=g[n>>3];A<<=n&7}for(k=0;k<C;k++)n&7||(A=g[n>>3]),A&128?(v&&(v[n]=1),w=2>r.encoding?t[p++]:z,c=c>w?w:c,b[n++]=w):(v&&(v[n]=0),b[n++]=e),A<<=1;n+=G}else if(2>r.encoding)for(l=0;l<E;l++){for(k=0;k<C;k++)w=t[p++],c=c>w?w:c,b[n++]=w;n+=G}else for(c=c>z?z:c,l=0;l<E;l++){for(k=
0;k<C;k++)b[n++]=z;n+=G}if(1===r.encoding&&p!==r.numValidPixels)throw"Block and Mask do not match";q++}}}z=v;v={width:a.width,height:a.height,pixelData:b,minValue:c,maxValue:a.pixels.maxValue,noDataValue:e};z&&(v.maskData=z);m.returnEncodedMask&&a.mask&&(v.encodedMaskData=a.mask.bitset?a.mask.bitset:null);if(m.returnFileInfo&&(v.fileInfo=Q(a),m.computeUsedBitDepths)){m=v.fileInfo;z=a.pixels.numBlocksX*a.pixels.numBlocksY;A={};for(t=0;t<z;t++)p=a.pixels.blocks[t],0===p.encoding?A.float32=!0:1===p.encoding?
A[p.bitsPerPixel]=!0:A[0]=!0;a=Object.keys(A);m.bitDepths=a}return v}},Q=function(e){return{fileIdentifierString:e.fileIdentifierString,fileVersion:e.fileVersion,imageType:e.imageType,height:e.height,width:e.width,maxZError:e.maxZError,eofOffset:e.eofOffset,mask:e.mask?{numBlocksX:e.mask.numBlocksX,numBlocksY:e.mask.numBlocksY,numBytes:e.mask.numBytes,maxValue:e.mask.maxValue}:null,pixels:{numBlocksX:e.pixels.numBlocksX,numBlocksY:e.pixels.numBlocksY,numBytes:e.pixels.numBytes,maxValue:e.pixels.maxValue,
noDataValue:this.noDataValue}}};return I});