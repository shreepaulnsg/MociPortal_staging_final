// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/3.38/esri/copyright.txt for details.
//>>built
define("esri/layers/vectorTiles/views/3d/layers/support/FastSymbolUpdates",["require","exports","../../../../renderers/support/utils","../graphics/graphicUtils","../../lib/glMatrix"],function(J,n,y,D,z){function m(a){return null!==a&&void 0!==a}function p(a){return"number"===typeof a}function g(a,b){a&&a.push(b)}function l(a,b,c,d,e){var f=a.minSize,k=a.maxSize;if(a.expression)return g(e,"Could not convert size info: expression not supported"),!1;if(a.useSymbolValue)return a=d.symbolSize[c],b.minSize[c]=
a,b.maxSize[c]=a,b.offset[c]=b.minSize[c],b.factor[c]=0,b.type[c]=1,!0;if(m(a.field)){if(m(a.stops)){if(2===a.stops.length&&p(a.stops[0].size)&&p(a.stops[1].size))return A(a.stops[0].size,a.stops[1].size,a.stops[0].value,a.stops[1].value,b,c),b.type[c]=1,!0;g(e,"Could not convert size info: stops only supported with 2 elements");return!1}if(p(f)&&p(k)&&m(a.minDataValue)&&m(a.maxDataValue))return A(f,k,a.minDataValue,a.maxDataValue,b,c),b.type[c]=1,!0;if(null!=y.meterIn[a.valueUnit])return b.minSize[c]=
-Infinity,b.maxSize[c]=Infinity,b.offset[c]=0,b.factor[c]=1/y.meterIn[a.valueUnit],b.type[c]=1,!0;"unknown"===a.valueUnit?g(e,"Could not convert size info: proportional size not supported"):g(e,"Could not convert size info: scale-dependent size not supported");return!1}if(!m(a.field)){if(a.stops&&a.stops[0]&&p(a.stops[0].size))return b.minSize[c]=a.stops[0].size,b.maxSize[c]=a.stops[0].size,b.offset[c]=b.minSize[c],b.factor[c]=0,b.type[c]=1,!0;if(p(f))return b.minSize[c]=f,b.maxSize[c]=f,b.offset[c]=
f,b.factor[c]=0,b.type[c]=1,!0}g(e,"Could not convert size info: unsupported variant of sizeInfo");return!1}function A(a,b,c,d,e,f){d=0<Math.abs(d-c)?(b-a)/(d-c):0;e.minSize[f]=0<d?a:b;e.maxSize[f]=0<d?b:a;e.offset[f]=a-c*d;e.factor[f]=d}function E(a,b,c,d){if(a.normalizationField||a.valueRepresentation)return g(d,"Could not convert size info: unsupported property"),null;var e=a.field;if(null!=e&&"string"!==typeof e)return g(d,"Could not convert size info: field is not a string"),null;if(!b.size)b.size=
{field:a.field,minSize:[0,0,0],maxSize:[0,0,0],offset:[0,0,0],factor:[0,0,0],type:[0,0,0]};else if(a.field)if(!b.size.field)b.size.field=a.field;else if(a.field!==b.size.field)return g(d,"Could not convert size info: multiple fields in use"),null;switch(a.axis){case "width":return(e=l(a,b.size,0,c,d))?b:null;case "height":return(e=l(a,b.size,2,c,d))?b:null;case "depth":return(e=l(a,b.size,1,c,d))?b:null;case "width-and-depth":return(e=l(a,b.size,0,c,d))&&l(a,b.size,1,c,d),e?b:null;case null:case void 0:case "all":return(e=
(e=(e=l(a,b.size,0,c,d))&&l(a,b.size,1,c,d))&&l(a,b.size,2,c,d))?b:null;default:return g(d,'Could not convert size info: unknown axis "'+a.axis+'""'),null}}function F(a,b,c){for(var d=0;3>d;++d){var e=b.unitInMeters;1===a.type[d]&&(e*=b.modelSize[d],a.type[d]=2);a.minSize[d]/=e;a.maxSize[d]/=e;a.offset[d]/=e;a.factor[d]/=e}if(0!==a.type[0])b=0;else if(0!==a.type[1])b=1;else if(0!==a.type[2])b=2;else return g(c,"No size axis contains a valid size or scale"),!1;for(d=0;3>d;++d)0===a.type[d]&&(a.minSize[d]=
a.minSize[b],a.maxSize[d]=a.maxSize[b],a.offset[d]=a.offset[b],a.factor[d]=a.factor[b],a.type[d]=a.type[b]);return!0}function q(a,b,c){a[4*b]=c.r/255;a[4*b+1]=c.g/255;a[4*b+2]=c.b/255;a[4*b+3]=c.a}function G(a,b,c){if(a.normalizationField)return g(c,"Could not convert color info: unsupported property"),null;if("string"===typeof a.field)if(a.stops){if(8<a.stops.length)return g(c,"Could not convert color info: too many color stops"),null;b.color={field:a.field,values:[0,0,0,0,0,0,0,0],colors:[0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};a=a.stops;for(c=0;8>c;++c){var d=a[Math.min(c,a.length-1)];b.color.values[c]=d.value;q(b.color.colors,c,d.color)}}else if(a.colors){if(!m(a.minDataValue)||!m(a.maxDataValue))return g(c,"Could not convert color info: missing data values"),null;if(2!==a.colors.length)return g(c,"Could not convert color info: invalid colors array"),null;b.color={field:a.field,values:[0,0,0,0,0,0,0,0],colors:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0]};b.color.values[0]=a.minDataValue;q(b.color.colors,0,a.colors[0]);b.color.values[1]=a.maxDataValue;q(b.color.colors,1,a.colors[1]);for(c=2;8>c;++c)b.color.values[c]=a.maxDataValue,q(b.color.colors,c,a.colors[1])}else return g(c,"Could not convert color info: missing stops or colors"),null;else if(a.stops&&0<=a.stops.length||a.colors&&0<=a.colors.length)for(a=a.stops&&0<=a.stops.length?a.stops[0].color:a.colors[0],b.color={field:null,values:[0,0,0,0,0,0,0,0],colors:[0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},c=0;8>c;c++)b.color.values[c]=Infinity,q(b.color.colors,c,a);else return g(c,"Could not convert color info: no field and no colors/stops"),null;return b}function t(a,b,c,d){a=2===c&&"arithmetic"===a.rotationType;b.offset[c]=a?90:0;b.factor[c]=a?-1:1;b.type[c]=1}function H(a,b,c){if("string"!==typeof a.field)return g(c,"Could not convert rotation info: field is not a string"),null;if(!b.rotation)b.rotation={field:a.field,offset:[0,0,0],factor:[1,1,
1],type:[0,0,0]};else if(a.field)if(!b.rotation.field)b.rotation.field=a.field;else if(a.field!==b.rotation.field)return g(c,"Could not convert rotation info: multiple fields in use"),null;switch(a.axis){case "tilt":return t(a,b.rotation,0,c),b;case "roll":return t(a,b.rotation,1,c),b;case null:case void 0:case "heading":return t(a,b.rotation,2,c),b;default:return g(c,'Could not convert rotation info: unknown axis "'+a.axis+'""'),null}}function u(a,b,c){if(!a)return null;var d=!b.supportedTypes||
!!b.supportedTypes.size,e=!b.supportedTypes||!!b.supportedTypes.color,f=!b.supportedTypes||!!b.supportedTypes.rotation;return(a=a.reduce(function(k,h){if(!k)return k;if(h.valueExpression)return g(c,"Could not convert visual variables: arcade expressions not supported"),null;switch(h.type){case "size":return d?E(h,k,b,c):k;case "color":return e?G(h,k,c):k;case "rotation":return f?H(h,k,c):k;default:return g(c,"Could not convert visual variables: unsupported type "+h.type),null}},{size:null,color:null,
rotation:null}))&&a.size&&!F(a.size,b,c)?null:a}function v(a,b,c){if(!!a!==!!b||a&&a.field!==b.field)return!1;if(a&&"rotation"===c)for(c=0;3>c;c++)if(a.type[c]!==b.type[c]||a.offset[c]!==b.offset[c]||a.factor[c]!==b.factor[c])return!1;return!0}function w(a,b){var c={vvSizeEnabled:!1,vvSizeMinSize:null,vvSizeMaxSize:null,vvSizeOffset:null,vvSizeFactor:null,vvSizeValue:null,vvColorEnabled:!1,vvColorValues:null,vvColorColors:null,vvSymbolAnchor:null,vvSymbolRotation:null},d=a&&null!=a.size;a&&a.size?
(c.vvSizeEnabled=!0,c.vvSizeMinSize=a.size.minSize,c.vvSizeMaxSize=a.size.maxSize,c.vvSizeOffset=a.size.offset,c.vvSizeFactor=a.size.factor):a&&d&&(c.vvSizeValue=b.transformation.scale);a&&d&&(c.vvSymbolAnchor=b.transformation.anchor,c.vvSymbolRotation=b.transformation.rotation);a&&a.color&&(c.vvColorEnabled=!0,c.vvColorValues=a.color.values,c.vvColorColors=a.color.colors);return c}Object.defineProperty(n,"__esModule",{value:!0});n.convertVisualVariables=u;n.initFastSymbolUpdatesState=function(a,
b,c){return b&&a&&!a.disableFastUpdates?(a=u(a.visualVariables,c))?{enabled:!0,visualVariables:a,materialParameters:w(a,c),customTransformation:a&&null!=a.size}:{enabled:!1}:{enabled:!1}};n.updateFastSymbolUpdatesState=function(a,b,c){if(!b||!a.enabled)return!1;var d=a.visualVariables;b=u(b.visualVariables,c);if(!(b&&v(d.size,b.size,"size")&&v(d.color,b.color,"color")&&v(d.rotation,b.rotation,"rotation")))return!1;a.visualVariables=b;a.materialParameters=w(b,c);a.customTransformation=b&&null!=b.size;
return!0};n.getMaterialParams=w;var x;(function(a){var b=z.mat4d,c=z.vec3,d=b.create(),e=c.create();a.evaluateModelTransform=function(f,k,h){if(!f.vvSizeEnabled)return h;b.set(h,d);D.computeObjectRotation(f.vvSymbolRotation[2],f.vvSymbolRotation[0],f.vvSymbolRotation[1],d);if(f.vvSizeEnabled){for(h=0;3>h;++h){var r=f.vvSizeOffset[h]+k[0]*f.vvSizeFactor[h],I=h;var B=f.vvSizeMinSize[h],C=f.vvSizeMaxSize[h];r=r<B?B:r>C?C:r;e[I]=r}b.scale(d,e,d)}else b.scale(d,f.vvSizeValue,d);b.translate(d,f.vvSymbolAnchor,
d);return d}})(x||(x={}));n.evaluateModelTransform=x.evaluateModelTransform});