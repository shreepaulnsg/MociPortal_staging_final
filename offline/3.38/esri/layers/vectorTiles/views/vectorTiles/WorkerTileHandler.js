// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/3.38/esri/copyright.txt for details.
//>>built
define("esri/layers/vectorTiles/views/vectorTiles/WorkerTileHandler","require exports dojo/Deferred ../../core/promiseUtils ../2d/tiling/enums ./WorkerTile ./style/StyleRepository".split(" "),function(r,t,n,h,p,m,q){return function(){function f(){this._tiles=new Map;this._spriteInfo={};this._glyphInfo={}}f.prototype.reset=function(){var a=new n;this._spriteInfo={};this._glyphInfo={};var c=this._tiles;c.forEach(function(d){return d.setObsolete()});c.clear();a.resolve();return a.promise};f.prototype.getLayers=
function(){return this._layers};f.prototype.setLayers=function(a){this._layers=(new q(a)).layers;return h.resolve({data:""})};f.prototype.getTile=function(a,c){var d=this,k=a.key,b=m.pool.acquire();b.initialize(a.key,a.refKey,this,a.rotation);var g=a.cacheTile;return c.invoke("fetchTileData",a.refKey).then(function(e){return b.setDataAndParse(e,c).then(function(l){g&&b.status!==p.TileStatus.INVALID&&d._tiles.set(k,b);return l}).catch(function(l){b.setObsolete();m.pool.release(b);d._tiles["delete"](b.tileKey);
return h.reject(l)})}).catch(function(e){b.setObsolete();if(d._tiles.has(b.tileKey))d._tiles["delete"](b.tileKey);return h.reject(e)}).always(function(e){g||m.pool.release(b);return e})};f.prototype.update=function(a){var c=this._tiles.get(a.key);return c?c.updateSymbols(a.rotation):h.reject()};f.prototype.destructTileData=function(a){this._tiles.has(a)&&(m.pool.release(this._tiles.get(a)),this._tiles["delete"](a));return h.resolve()};f.prototype.fetchSprites=function(a,c){var d=[],k=this._spriteInfo;
a.forEach(function(b){void 0===k[b]&&d.push(b)});return 0===d.length?h.resolve():c.invoke("getSprites",d).then(function(b){for(var g in b)k[g]=b[g]})};f.prototype.getSpriteItems=function(){return this._spriteInfo};f.prototype.fetchGlyphs=function(a,c,d,k){var b=[],g=this._glyphInfo[c];g?d.forEach(function(e){g[e]||b.push(e)}):(g=this._glyphInfo[c]=[],d.forEach(function(e){return b.push(e)}));return 0===b.length?h.resolve():k.invoke("getGlyphs",{tileID:a,font:c,codePoints:b}).then(function(e){for(var l in e)g[l]=
e[l]})};f.prototype.getGlyphItems=function(a){return this._glyphInfo[a]};return f}()});