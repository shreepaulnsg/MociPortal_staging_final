// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/3.38/esri/copyright.txt for details.
//>>built
define("esri/layers/vectorTiles/views/2d/engine/webgl/mesh/templates/WGLLineTemplate","require exports ../../../../../../core/tsSupport/extendsHelper ../../../../../../core/Logger ../../color ../../definitions ../../enums ../../enums ../../LineTess ../../number ../../TileClipper ../../Utils ../../WGLDisplayRecord ./WGLMeshTemplate".split(" "),function(K,L,Q,R,S,T,A,U,n,D,V,M,W,X){Object.defineProperty(L,"__esModule",{value:!0});var I=R.getLogger("esri.views.2d.engine.webgl.WGLLineTemplate"),F=n.allocTriangles(20),
J=n.allocTriangles(20),G=[n.allocExtrudeVectors(),n.allocExtrudeVectors()],N=n.allocExtrudeVectors(),H=T.TILE_SIZE+8,r=new n.Tessellator({distanceAlongCorrection:!0}),E=new V.TileClipper(0,0,0,1,8);E.setExtent(512);K=function(O){function t(c,b,a,d,e,f,h,g,k,q,l){var m=O.call(this)||this;m.capType=f;m.joinType=h;m.fillColor=g;m.tl=k;m.br=q;m.hasPattern=l;m.geometryType=A.WGLGeometryType.LINE;m.halfWidth=0<d?.5*(d+1/e):0;m._materialStore=c;m.vvFlags=b;m.materialId=m._materialStore.createSpriteMaterial(a,
m.geometryType,b);return m}Q(t,O);t.fromSimpleLine=function(c,b,a,d,e){var f=a.color,h=M.getCapType("round"),g=M.getJoinType("round");f=f&&"none"!==a.style&&S.premultiplyAlphaRGBA(f)||0;"none"===a.style&&(f=0);if(!d)return new t(c,b,d,a.width,e,h,g,f,0,0,!1);var k=d.rect,q=k.x+1+d.width,l=k.y+1+d.height;k=D.i1616to32(k.x+1,k.y+1);q=D.i1616to32(q,l);return new t(c,b,d,a.width,e,h,g,f,k,q,!0)};t.fromPictureLineSymbol=function(c,b,a,d){I.error("PictureLineSymbol support does not exist!");return null};
t.prototype.writeMesh=function(c,b,a,d,e,f,h){if(this.vvFlags&U.WGLVVFlag.COLOR||0!==this.fillColor){f=this._materialStore.get(this.materialId);var g=b.indexVector;b=b.get("geometry");var k=this.halfWidth,q=new W(d,this.geometryType,this.materialId),l=this._getOffset(b,f);q.vertexFrom=l;q.indexFrom=g.length;c.push(q);switch(a){case "esriGeometryPolyline":c=this._clipLines(e.geometry.paths);this._write(q,g,b,l,d,k,c,f,h);break;case "esriGeometryPolygon":c=this._clipLines(e.geometry.rings);this._write(q,
g,b,l,d,k,c,f,h);break;default:I.error("Unable to handle geometryType: "+a)}}};t.prototype._clipLines=function(c){for(var b=[],a=!1,d=0;d<c.length;){var e=[],f=c[d];E.reset(2);var h=f[0],g=h[0];h=h[1];if(a)E.moveTo(g,h);else{if(-8>g||g>H||-8>h||h>H){a=!0;continue}e.push({x:g,y:h})}for(var k=!1,q=f.length,l=1;l<q;++l)if(g+=f[l][0],h+=f[l][1],a)E.lineTo(g,h);else{if(-8>g||g>H||-8>h||h>H){k=!0;break}e.push({x:g,y:h})}if(k)a=!0;else{if(a){if(e=E.resultWithStarts())for(a=0;a<e.length;a++)b.push(e[a])}else b.push({line:e,
start:0});d++;a=!1}}return b};t.prototype._getOffset=function(c,b){b=b.materialKeyInfo.hasVV()?11:8;return c.length/b};t.prototype._write=function(c,b,a,d,e,f,h,g,k){for(var q=0,l=0;l<h.length;l++){var m=h[l],x=m.line;if(!(2>x.length)){var p=x[0],u=x[x.length-1],y=u.x-p.x;p=u.y-p.y;y=1E-6>y*y+p*p;var B=m.start%65535;m=G[1];for(p=0;p<x.length;p++){var z=x[p];u=m===G[p%2]?G[(p+1)%2]:G[p%2];var v=0===p,w=p===x.length-1;w&&y&&!this.hasPattern?n.copyExtrudeVectors(u,N):(this._computeExtrudeVectors(u,p,
x,y),q+=this._writeVertices(a,e,f,z.x,z.y,u,B,q,g,k),!u.capCenter||y&&w||this._writePieIndices(c,b,d,u),y&&v&&!this.hasPattern&&n.copyExtrudeVectors(N,u));v||this._writeBridgeIndices(c,b,d,m,u);if(!w){w=x[p+1];v=[w.x-z.x,w.y-z.y];var C=n.length(v);v=[v[0]/C,v[1]/C];C=B+C;if(65535<C){var P=(65535-B)/(C-B);B=z.x+(w.x-z.x)*P;z=z.y+(w.y-z.y)*P;w=m;r.buttCap(w,v,v);q+=this._writeVertices(a,e,f,B,z,w,65535,q,g,k);r.bridge(F,u,w);this._writeBridgeIndices(c,b,d,u,w);r.buttCap(w,v,v);B=C-65535}else B=C,m=
u}}}}c.vertexCount=q};t.prototype._writeVertices=function(c,b,a,d,e,f,h,g,k,q){var l=0,m=D.i1616to32(d,e),x=f.vectors;f=x.items;for(x=x.count;l<x;++l){var p=f[l].vector,u=p[0];p=p[1];var y=f[l].texCoords,B=y[0],z=y[1],v=f[l].direction;y=v[0];var w=v[1];v=D.i1616to32(h,31*a);u=D.i8888to32(Math.round(31*u),Math.round(31*p),Math.round(31*B),Math.round(31*z));p=D.i8888to32(Math.round(31*y),Math.round(31*w),0,0);c.push(m);c.push(b);c.push(this.fillColor);c.push(u);c.push(v);c.push(this.tl);c.push(this.br);
c.push(p);this._writeVV(c,q,k);f[l].base={index:g+l,point:[d,e]}}return l};t.prototype._writeVV=function(c,b,a){a.materialKeyInfo.hasVV()&&(c.push(b[A.VVType.SIZE]),c.push(b[A.VVType.COLOR]),c.push(b[A.VVType.OPACITY]))};t.prototype._writeBridgeIndices=function(c,b,a,d,e){r.bridge(F,d,e);for(d=0;d<F.count;++d)e=F.items[d],b.push(a+e.v1.base.index),b.push(a+e.v2.base.index),b.push(a+e.v3.base.index),c.indexCount+=3};t.prototype._writePieIndices=function(c,b,a,d){r.pie(J,d);for(d=0;d<J.count;++d){var e=
J.items[d];b.push(a+e.v1.base.index);b.push(a+e.v2.base.index);b.push(a+e.v3.base.index);c.indexCount+=3}};t.prototype._computeExtrudeVectors=function(c,b,a,d){var e=a[b],f=[void 0,void 0],h=[void 0,void 0];if(0<b&&b<a.length-1){var g=a[(b+a.length-1)%a.length],k=a[(b+1)%a.length];n.normalize(f,[e.x-g.x,e.y-g.y]);n.normalize(h,[k.x-e.x,k.y-e.y])}else if(0===b)k=a[(b+1)%a.length],n.normalize(h,[k.x-e.x,k.y-e.y]),d?(g=a[a.length-2],n.normalize(f,[e.x-g.x,e.y-g.y])):f=h;else if(b===a.length-1)g=a[(b+
a.length-1)%a.length],n.normalize(f,[e.x-g.x,e.y-g.y]),d?(g=a[1],n.normalize(h,[g.x-e.x,g.y-e.y])):h=f;else{console.error("Vertex index 'i' out of range.");return}d||0!==b?d||b!==a.length-1?this._computeJoinExtrudeVectors(c,f,h):this._computeCapExtrudeVectors(c,f,h,n.CapPosition.END):this._computeCapExtrudeVectors(c,f,h,n.CapPosition.START)};t.prototype._computeCapExtrudeVectors=function(c,b,a,d){switch(this.capType){case A.CapType.BUTT:r.buttCap(c,b,a);break;case A.CapType.ROUND:var e=n.getNumberOfSlices(Math.PI);
r.roundCap(c,b,a,d,e,d===n.CapPosition.START?-1:1);break;case A.CapType.SQUARE:r.squareCap(c,b,a,d);break;default:I.error("Encountered unknown cap type: "+this.capType+", defaulting to BUTT"),r.buttCap(c,b,a)}};t.prototype._computeJoinExtrudeVectors=function(c,b,a){var d=n.getRads(b,a);if(d>Math.PI-.05)r.rectJoin(c,b,a);else if(this.joinType===A.JoinType.MITER||.1>d).05>d?r.fastMiterJoin(c,b,a):d<n.MITER_SAFE_RADS?r.miterJoin(c,b,a):r.bevelJoin(c,b,a,n.SYSTEM_MAG_LIMIT);else if(this.joinType===A.JoinType.BEVEL)r.bevelJoin(c,
b,a,1);else if(this.joinType===A.JoinType.ROUND){var e=n.getNumberOfSlices(d);2.3>d?2>e||.5>d?r.bevelJoin(c,b,a,1):r.roundJoin(c,b,a,e):r.unitRoundJoin(c,b,a,e)}};return t}(X.default);L.default=K});