// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/3.38/esri/copyright.txt for details.
//>>built
define("esri/tasks/NAServiceDescription",["dojo/_base/declare","dojo/json","dojo/Deferred","dojo/_base/lang","../request"],function(t,u,n,p,h){return t(null,{declaredClass:"esri.tasks._NAServiceDescription",_sd:null,getServiceDescription:function(k,l){var c=new n;if(this._sd)c.resolve(this._sd);else if(this._url&&this._url.orig){var e=this._url.orig,v=(this._url.path.match(/\/solve$/)||[]).length?"Route":(this._url.path.match(/\/solveClosestFacility$/)||[]).length?"ClosestFacility":"ServiceAreas",
b,r=function(d){h({url:d+("/"===d[d.length-1]?"":"/")+"GetTravelModes/execute",content:{f:"json",serviceName:v},callbackParamName:"callback"}).then(function(a){var f=[],q=null;if(a&&a.results&&a.results.length)for(var g=0;g<a.results.length;g++)if("supportedTravelModes"===a.results[g].paramName){if(a.results[g].value&&a.results[g].value.features)for(var m=0;m<a.results[g].value.features.length;m++)if(a.results[g].value.features[m].attributes){var w=u.parse(a.results[g].value.features[m].attributes.TravelMode);
f.push(w)}}else"defaultTravelMode"===a.results[g].paramName&&(q=a.results[g].value);b.supportedTravelModes=f;b.defaultTravelMode=q;c.resolve(b)},function(a){console.log("Could not read from the routingUtilities service.");c.reject(a)})};h({url:e,content:{f:"json"},callbackParamName:"callback"}).then(function(d){b=d;b.supportedTravelModes||(b.supportedTravelModes=[]);for(d=0;d<b.supportedTravelModes.length;d++)b.supportedTravelModes[d].id||(b.supportedTravelModes[d].id=b.supportedTravelModes[d].itemId);
l?c.resolve(b):k?r(k):10.4<=b.currentVersion?h({url:e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",content:{f:"json"},callbackParamName:"callback"}).then(function(a){b.supportedTravelModes=a.supportedTravelModes;b.defaultTravelMode=a.defaultTravelMode;c.resolve(b)},function(a){console.log("Could not get to the NAServer's retrieveTravelModes.");c.reject(a)}):h({url:e.substring(0,e.indexOf("/rest/")+6)+"info",content:{f:"json"},callbackParamName:"callback"}).then(function(a){a.owningSystemUrl?
(e=a.owningSystemUrl,h({url:e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",content:{f:"json"},callbackParamName:"callback"}).then(function(f){f&&f.helperServices&&f.helperServices.routingUtilities&&f.helperServices.routingUtilities.url?r(f.helperServices.routingUtilities.url):(console.log("Portal does not have helperServices.routingUtilities defined."),c.resolve(b))},function(f){console.log("Could not get to the portal's self.");c.reject(f)})):c.resolve(b)},function(a){console.log("Could not get to the NAServer service description.");
c.reject(a)})},function(d){c.reject(d)})}else c.reject("NA Task has no URL specified.");c.then(p.hitch(this,function(d){this._sd=d}),p.hitch(this,function(){this._sd=null}));return c.promise},getOwningSystemUrl:function(){var k=new n;if(this._url&&this._url.orig){var l=this._url.orig;h({url:l.substring(0,l.indexOf("/rest/")+6)+"info",content:{f:"json"},callbackParamName:"callback"}).promise.always(function(c){k.resolve(c.owningSystemUrl)})}else k.resolve(void 0);return k.promise}})});