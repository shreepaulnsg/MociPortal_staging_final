// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/3.38/esri/copyright.txt for details.
//>>built
(function(q,v){"function"===typeof define&&define.amd?define("esri/workers/heatmapCalculator",[],v):q.HeatmapCalculator=v();if(q.importScripts&&"function"===typeof q.importScripts){var x;q.addEventListener("message",function(u){var a=u.data,d=a.action;u=a.msgId;d&&u&&("initialize"==d?(x=new q.HeatmapCalculator(a),postMessage({msgId:u})):"calculate"==d&&(a=x.calculateImageData(a),postMessage({msgId:u,imageData:a},a)))},!1)}})(this,function(){function q(a){a=a||{};this.radius=a.blurRadius||10;this.maxVal=
a.maxPixelIntensity;this.minVal=a.minPixelIntensity;this.field=a.field;this.fieldOffset=a.fieldOffset;this.width=a.width;this.height=a.height;this.gradient=a.gradient;this.stats=null}function v(a,d){for(var g=Array(a),b=0;b<a;b++)for(var c=g[b]=Array(d),e=0;e<d;e++)c[e]=0;return g}function x(a,d){return a-d}var u=window.ArrayBuffer?!0:!1;q.prototype.calculateImageData=function(a){var d=this.radius=a.blurRadius||this.blurRadius;this.maxVal=null!=a.maxPixelIntensity?a.maxPixelIntensity:this.maxPixelIntensity;
this.minVal=null!=a.minPixelIntensity?a.minPixelIntensity:this.minPixelIntensity;var g=this.field="field"in a?a.field:this.field,b=this.fieldOffset="fieldOffset"in a?a.fieldOffset:this.fieldOffset,c=a.screenPoints,e=a.gradient;if(e)this.gradient=e;else if(this.gradient)e=this.gradient;else return!1;var h=a.features,f=a.mapinfo;c||(h&&f?c=this.screenPoints=this._calculateScreenPoints(h,f):!f&&this.screenPoints&&(h=!0,a.width&&a.width!=this.width&&(h=!1,this.width=a.width),a.height&&a.height!=this.height&&
(h=!1,this.height=a.height),h?c=this.screenPoints:this.screenPoints=null));if(!c)return!1;h=f.width||a.width||this.width;a=f.height||a.height||this.height;d=this._calculateIntensityMatrix(c,h,a,d,g,b);this._lastMatrix=d.matrix;this._maxIntVal=d.max;return this._createImageData(h,a,this._lastMatrix,e)};q.prototype._calculateScreenPoints=function(a,d){var g=d.resolution,b=d.width,c=d.height;d=d.extent;var e=[];if(d)g||(g=c?Math.abs(d[3]-d[1])/c:Math.abs(d[2]-d[0])/b);else return!1;b=0;for(c=a.length;b<
c;b++){var h=a[b];e[b]={x:Math.round((h.geometry.x-d[0])/g),y:Math.round((d[3]-h.geometry.y)/g),attributes:h.attributes}}return e};q.prototype._calculateIntensityMatrix=function(a,d,g,b,c,e){var h=v(g,d),f=Math.round(4.5*b),k=b*b,p=[],l=2*f+1,n=-1,m=1,r=-Infinity;e=e||0;for(c=function(w){return"function"==typeof w?w:w?"abs"==e?function(z){return-1*+z.attributes[w]}:function(z){return+z.attributes[w]+e}:function(){return 1}}(c);++n<l;)p[n]=Math.exp(-Math.pow(n-f,2)/(2*k))/Math.sqrt(2*Math.PI)*(b/2);
for(n=0;n<a.length;n++){var t=a[n];b=t.x-f;k=t.y-f;l=b;var y=k;m=+c(t);if(!isNaN(m)&&null!==m)for(var A=Math.min(t.y+f,g-1),B=Math.min(t.x+f,d-1);k<=A;){for(var C=p[k-y];b<=B;)-1<b&&-1<k&&(t=h[k][b]+=C*p[b-l]*m,t>r&&(r=t)),b++;k++;b=l}}return{matrix:h,max:r}};q.prototype._createImageData=function(a,d,g,b){if(!u)return this._createPixelData(a,d,g,b);var c=new Uint32Array(a*d);b=b.buffer?new Uint32Array(b.buffer):new Uint32Array((new Uint8Array(b)).buffer);for(var e=this.minVal,h=b.length/(this.maxVal-
e),f=0;f<d;f++)for(var k=g[f],p=0;p<a;p++){var l=Math.floor((k[p]-e)*h);c[f*a+p]=0>l?b[0]:l<b.length?b[l]:b[b.length-1]}return c};q.prototype._createPixelData=function(a,d,g,b){for(var c=Array(a*d*4),e=this.minVal,h=b.length/4/(this.maxVal-e),f=3,k=0;k<d;k++)for(var p=g[k],l=0;l<a;l++){var n=4*(k*a+l)+3,m=4*Math.floor((p[l]-e)*h)+3;3>m?m=3:m>b.length-1&&(m=b.length-1);for(f=4;f--;)c[n-f]=b[m-f]}return c};q.calculateStats=function(a,d){if(!a)return!1;for(var g=a.length,b=0,c=0,e=0,h=0,f=Infinity,k=
-Infinity,p,l,n,m,r;g--;)for(n=a[g],p=n.length;p--;)if(r=n[p],!d||d(r))m||(m=r),l=r-m,h+=r,b+=l,c+=l*l,r<f&&(f=r),r>k&&(k=r),e++;return 0<e?{mean:h/e,stdDev:Math.sqrt((c-b*b/e)/e),min:f,max:k,mid:(k-f)/2}:{mean:0,stdDev:0,min:0,max:0,mid:0}};q.getBinnedValues=function(a){function d(){console.log("not enough information to determine bins for HeatmapCalculator.getBinnedValues")}function g(m,r,t){for(var y=[];m<r;m+=t)y.push(m);return y}a=a||{};var b=a.stats,c=a.min,e=a.max,h=a.bins,f=a.count,k=a.size;
a=a.values;if(!a)return console.log("values are required for HeatmapCalculator.getBinnedValues function"),!1;b&&null!=b.max&&null!=b.min&&(c=b.min,e=b.max);if(!h)if(k){null==c&&(c=0);if(null==e){if(null==f)return d(),!1;e=c+f*k}h=g(c,e,k)}else if(f){b&&null!=b.min&&null!=b.max?(c=b.min,e=b.max):null!=e&&0<e&&null==c&&(c=0);if(null==c||null==e)return d(),!1;h=g(c,e,(e-c)/f)}f=h.length;b=v(f,0);c=a.length;for(var p,l,n;c--;)for(k=a[c],e=k.length;e--;){p=k[e];for(n=1;n<f&&!(l=h[n],p<l);n++);b[n-1].push(p)}return b.map(function(m){return m.sort(x)})};
q.getHistogramData=function(a){a=a||{};var d=a.binnedData,g=a.stats,b=a.byStdDev,c=a.matrix;a=a.binOptions||{};if(!d)if(c){if(a.values=c,b&&(g||(g=q.calculateStats(c)),a.size=g.stdDev),a.stats=g,d=q.getBinnedValues(a),!d)return!1}else return console.log("no data provided to HeatmapCalculator.getHistogramData"),!1;if(a.bins)a=a.bins;else for(a=[],b=0;b<d.length;b++)c=d[b],a.push(c[0]);var e=[];for(b=0;b<a.length-1;b++)c=a[b],e[b]={range:[c,a[b+1]],count:c.length};g?d=g.max:(c=d[b],d=c[c.length-1]);
c=a[b];e[b]={range:[c,d],count:c.length};return e};return q});